TODO:   (Done items are marked with a "/" at the begining of the line)

Bug: "Pause bug" is back: When paused, occasionally audio plays. Investigated: Seems to be problem with mpylayer, suggested fix: stop playback after paused for > 10 secs and remember location. 

Bug: fix "&amp;" etc in the display
    (see Tuesday 05-05-2015, track 15)

Bug: "Track seeking". Intermittent. When you press vvv or more, sometimes the seeking doesn't stop, but the time keeps flicking forward in say 5 s increments. (Can't replicate)


Fast boot (on rpi)

How can I see what episode I'm in?


Implement an advanced 5 button design, 
    eg: 
    SELECT      = play/pause
    SELECT hold = shutdown
    LEFT        = previous track / episode / show
    UP          = up a navigation level
    UP hold     = toggle favourite
    DOWN        = down a navigation level
    RIGHT       = next track / episode / show

    requires:
      modal display (show nav / episode nav / track nav)

Sort out where all the files should live on the rpi (/root ?)

Improve reliability of shield buttons (create a listening thread?)


Refactor to create an "indexed player"
Refactor: make player and display objects (player object can raise events to get the display to update)

Refactor: use an event queue

Refactor DB to create a simple file based DB containing:
    media file  (myfile.m4a)
    media index file  (myfile.idx)  - a list of songs / indexes
    media data file (myfile.dat)    - data used by junctionbox, eg the "heard" count, favourited flag

Refactor: make ep and current_track 0 based (rather than starting at -1 for the header)

Get other buttons working (again)


Factor out EPISODE_DIRECTORY (just use DATA_DIRECTORY and search for sub-directories)
      Question is whether to do all sub-directories in DATA_DIRECTORY, or to list sub-dirs e.g. by date,
      so that you can choose one.
  This has been partially addressed by EPISODE_DIRECTORY_LIST that allows loading of several directories.


Save location when quitting on pause, so player resumes from last location 

Create "heard" field and persist

Separate segment download from parsing
  B: Not sure this is still relevant? Needs discussing.




UNPRIORITISED IDEAS:
====================

A web interface to see episodes, tracks and favourites and to control playback. 

/B: As a suggestion, the tracks data (pickle dump .p files) might be better stored/persisted on disk in json or XML, to allow easier manual adding/editing of tracks. 
   This was done as part of various other improvements

A display button to cycle through display options:
    just artist & track & status if paused / stopped
    + track number & elapsed episode time
    + elapsed track time
    + remaining time in track
    + episode



DONE:
=====
    /Bug: displays wrong episode
        looks like a refresh problem. I think because the track isn't changing the display isn't updating to the current episode.
        get debug display working (with curses)
            why does display clear?
                is the refresh command in debug in the wrong place?

    /Bug: crashing on Fiona's episodes when it hits the first track with an error from curses in show_favourite

        Add back the second line of the display


    /create default location for data directory
    /create default config file and copy it to the default location (B: done?)

    /B: Issue: When there are a lot of files (within one or across many dirs, startup is slow)
         Have added a FAST_START, but this has implications for segment loading, search "#B" in code

    /Bug: crashes when the data directory is empty (ie no episodes downloaded yet)
    /Bug: fix the pausing bug (hard to reproduce)
    /B: Have added a short delay, which seems to fix it. More elegant suggestion is made in the code.

    /Clear the GPIO when the programme exits. (B: Has been done.)

    /Add extra hardware options for having LCD and console display etc.
    /Fix the always seeking bug
    /Persist favourites
    /Clear the favourite LED when in the intro

    /Add fast-forward / rewind (I can't skip DJ chat)
    /B: Have added this. (Use <,> to skip by SKIP_TIME, and "/" to adjust the track start)

    /Make file paths configurable (B: This is already the case now, isn't it?)

    /Get shutdown working

    /Bug: fix display bug that eats non ascii chars leaving the string too short
        GOT IT! Have to convert the UTF-8 strings read from the .p file into unicode to manipulate them then back in to UTF-8 to print them to the screen. eg. str.ljust(...) will pad incorrectly the UTF-8 string.

        non-ascii chars are being replaced by multiple "#"s (unicode issue?)
        (Can the LCD display unicode chars? Maybe we don't need to strip them if we can get curses to work too)
        (Needs further improvement - non-ascii display ok, but the string trimming doens't work well.)


    /Feature: If time > 99 minutes, display is 100:1. Would like to see hours.

    /Segment loading needs discussing. There's performance implications by loading all segments at start, and give that segments are saved when favourties are made, this can easily lead to inconsistencies after a crash. B's suggestion is to load segment files when needed. This 'bug' has been addressed by implementing better access to the data through class Episodes_Database

    /Bug: When going back through say 5 episodes, sometimes the tracks displayed are from the previous episode. I.e. the
 episode playing is not the same as the one for which tracks are displayed.
 Put in a fix for the played file going out of sync with the file indicated by current_episode. Seems to be a problem with mp.loadfile not catching up.
 However: While the episode is seeking (in mplayer), it's possible to also seek for the track (in the display). But - when the track starts playing, it plays from beginning.


    /Bug: Fix flashing of previous track in display when navigating
    /Get LCD working
    /Turn off LCD backlight when shutting down
    /Implement shield buttons 
    /Bug: End of track. update_position returns False, so display shows seeking, and track never quits.

    /Make rapid repeated navigation work instead of looping on the same track

    /Find a way to show the "2/18" when navigating without it being instantly overwritten by the track name. 
        /timed UI for held buttons
    / Tidy up the superfluous code in "lj_download_segments"

    /Add performers to data extracted from Late Junction XML
    B: Data extraction needs re-doing anyway, as current regexp doesn't always work.

    /Add performer data to the exported favourited file

    /Export favourites to human readable text file
    /Put extra fields in at the parsing stage
    B: What extra fields? Contributors, record label etc has been added

    /create a while True main loop (around the current while loop)
    B: This may have been addressed.
